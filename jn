#!/bin/bash

AUTHOR="original Ben Winston hacked by Gwyrdh"
VERSION="0.3.4 with hacks"

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of 
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>

#Gwyrdh hacks
# Colour display of journal. Thanks to @coderofsalvation/kanban.bash for colour subsitution code
# Using title and tag in jn -u option
# Using grep for -t tag search and -s string search and showing line numbers of search results
# Using line number displayed in grep for jn -g -g to go to the line number in editor

# Settings
# edit for the location of the journal
# use full path
journal="/home/gwyrdh/.journal/journal.txt"
# select editor
# nano allows the go to line number option and the open editor at correct line for editing the new  entry
JNEDITOR="nano"

usage() {
	echo -e "${myname} ${VERSION}"
	echo -e "by $AUTHOR \n"
	echo -e "command: ${myname} [options]\n"
	echo "  -c => browse the journal in colour"
	echo "  -h => brings you to this help screen"
	echo "  -u => update journal where S2 is title S3 is tag"
	echo "  -t => find S2 tag"
	echo "  -s => search for S2 or S2 and S3 string"
	echo -e "  -g => go to S2 line number of search\n"
}

# Colour codes
# text reset
C0="\033[0m"
# white bold
C1="\033[37;1m"
# red bold
C2="\033[91;1m"
# green bold
C4="\033[92;1m"
# cyan
C5="\033[96;1m"
# blue
C6="\033[34;1m"
# for grep to show nice colours to match
# add below line to bashrc and source
# export GREP_COLORS='ms=01;96:ln=01;37'
# ms = cyan for selected search word
# ln = strong white for line number

# jn -u update the journal
if [ $# -eq 0 ] || [ "$1" = "-u" ]; then
	clear
	tmpfile="/tmp/$(date +%s)"
	touch "$tmpfile"
# insert date in journal [ ] allows for colour substitution
	printf "[$(date +%Y-%m-%d) $(date +%H:%M)] " >> "$tmpfile"
# insert title with . allowing for colour substitution
	printf ."$2" >> "$tmpfile"
# insert tag with @ to allow for colour substitution
	printf "\n@"$3" \n" >> "$tmpfile" 
# opens editor +3 puts cursor after date title and tag lines
	"$JNEDITOR" +3 "$tmpfile"
# touch journal file in case not yet created
	touch "$journal"
	cat "$tmpfile" >> "$journal"
	echo -e "\n~~~~~\n" >> "$journal"
# clean up
	rm "$tmpfile"
	echo "Thanks for the update!"

# 'jn -h' -> help
elif [ "$1" = "-h" ]; then
	usage

# print colour journal. thanks @coderofsalvation/kanban.bash
elif [ "$1" = "-c" ]; then
		cat "$journal" | awk '{ 
    a = gensub(/@([a-zA-Z0-9_\.-]+)/,"'$C5'&'$C0'","g")
    a = gensub(/\.([a-zA-Z0-9_\. -]+)/,"'$C4'&'$C0'","g",a)
    a = gensub(/\[([a-zA-Z0-9_: \.-]+)\]/,"'$C6'&'$C0'","g",a)
    print a
  }'

# jn -t search journal by tag
elif [ "$1" = "-t" ]; then
	grep --color -n -A 1 -B 1 @"$2" "$journal"

# jn -s search journal with one or two terms. Use "string with spaces" 	
elif [ "$1" = "-s" ]; then
	if [ $# = 3 ]; then
		# allows 2 search terms
	grep -E --color -n -A 2 -B 1 '$2|$3' "$journal"
	elif [ $# = 2 ]; then
		# only 1 search string
	grep --color -n -A 2 -B 1 "$2" "$journal"
	fi

# jn -g open journal at the line identified from search
elif [ "$1" = "-g" ]; then
	"$JNEDITOR" +"$2" "$journal"

else
	usage
fi
